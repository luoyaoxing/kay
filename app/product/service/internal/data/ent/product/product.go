// Code generated by entc, DO NOT EDIT.

package product

import (
	"time"
)

const (
	// Label holds the string label denoting the product type in the database.
	Label = "product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "fsku_id"
	// FieldVersionId holds the string denoting the versionid field in the database.
	FieldVersionId = "fversion_id"
	// FieldVersionName holds the string denoting the versionname field in the database.
	FieldVersionName = "fversion_name"
	// FieldProductId holds the string denoting the productid field in the database.
	FieldProductId = "fproduct_id"
	// FieldProductName holds the string denoting the productname field in the database.
	FieldProductName = "fproduct_name"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "fprice"
	// FieldAttr holds the string denoting the attr field in the database.
	FieldAttr = "fattr"
	// FieldProductDesc holds the string denoting the productdesc field in the database.
	FieldProductDesc = "fproduct_desc"
	// FieldAddtime holds the string denoting the addtime field in the database.
	FieldAddtime = "faddtime"
	// FieldMtime holds the string denoting the mtime field in the database.
	FieldMtime = "fmtime"
	// Table holds the table name of the product in the database.
	Table = "t_product"
)

// Columns holds all SQL columns for product fields.
var Columns = []string{
	FieldID,
	FieldVersionId,
	FieldVersionName,
	FieldProductId,
	FieldProductName,
	FieldPrice,
	FieldAttr,
	FieldProductDesc,
	FieldAddtime,
	FieldMtime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultVersionId holds the default value on creation for the "versionId" field.
	DefaultVersionId int64
	// VersionIdValidator is a validator for the "versionId" field. It is called by the builders before save.
	VersionIdValidator func(int64) error
	// DefaultVersionName holds the default value on creation for the "versionName" field.
	DefaultVersionName string
	// VersionNameValidator is a validator for the "versionName" field. It is called by the builders before save.
	VersionNameValidator func(string) error
	// DefaultProductId holds the default value on creation for the "productId" field.
	DefaultProductId int64
	// ProductIdValidator is a validator for the "productId" field. It is called by the builders before save.
	ProductIdValidator func(int64) error
	// DefaultProductName holds the default value on creation for the "productName" field.
	DefaultProductName string
	// ProductNameValidator is a validator for the "productName" field. It is called by the builders before save.
	ProductNameValidator func(string) error
	// DefaultPrice holds the default value on creation for the "price" field.
	DefaultPrice int
	// PriceValidator is a validator for the "price" field. It is called by the builders before save.
	PriceValidator func(int) error
	// DefaultAttr holds the default value on creation for the "attr" field.
	DefaultAttr string
	// AttrValidator is a validator for the "attr" field. It is called by the builders before save.
	AttrValidator func(string) error
	// DefaultProductDesc holds the default value on creation for the "productDesc" field.
	DefaultProductDesc string
	// ProductDescValidator is a validator for the "productDesc" field. It is called by the builders before save.
	ProductDescValidator func(string) error
	// DefaultAddtime holds the default value on creation for the "addtime" field.
	DefaultAddtime func() time.Time
	// DefaultMtime holds the default value on creation for the "mtime" field.
	DefaultMtime func() time.Time
	// UpdateDefaultMtime holds the default value on update for the "mtime" field.
	UpdateDefaultMtime func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int64) error
)
